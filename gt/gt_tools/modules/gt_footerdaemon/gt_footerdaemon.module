<?php
use Drupal\gt_footerdaemon\Controller\GTFooterDaemonController;

function gt_footerdaemon_cron() {
  // We access our configuration.
  $cron_config = \Drupal::configFactory()->getEditable('gt_footerdaemon.settings');
  // Default to an hourly interval. Of course, cron has to be running at least
  // hourly for this to work.
  $interval = $cron_config->get('interval');
  $interval = !empty($interval) ? $interval : 60;

  // We usually don't want to act every time cron runs (which could be every
  // minute) so keep a time for the next run in the site state.
  $next_execution = \Drupal::state()->get('next_execution');
  $next_execution = !empty($next_execution) ? $next_execution : 0;

  if (REQUEST_TIME >= $next_execution) {
    \Drupal::state()->set('next_execution', REQUEST_TIME + $interval * 60);

    $footercontroller = new GTFooterDaemonController;
    $footercontroller->get_remote_data();

    \Drupal::logger('cron')->notice('gt_footerdaemon ran');
    if (\Drupal::state()->get('gt_footerdaemon_show_status_message')) {
      drupal_set_message(t('gt_footerdaemon executed at %time', ['%time' => date_iso8601(REQUEST_TIME)]));
      \Drupal::state()->set('gt_footerdaemon_show_status_message', FALSE);
    }
    \Drupal::state()->set('gt_footerdaemon.next_execution', REQUEST_TIME + $interval);
  }
}
